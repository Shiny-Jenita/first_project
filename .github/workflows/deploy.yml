name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main  # trigger on push to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt -t .
          zip -r lambda_package.zip .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  

      - name: Set ZIP name for S3
        run: echo "ZIP_NAME=lambda_package_v${{ github.run_id }}.zip" >> $GITHUB_ENV

      - name: Upload Lambda package to S3
        run: aws s3 cp lambda_package.zip s3://my-unique-buck-name/$ZIP_NAME

      
             
      - name: Deploy Lambda functionn
        run: |
          aws lambda update-function-code \
            --function-name arn:aws:lambda:us-east-1:760812854335:function:lamda_func \
            --zip-file fileb://lambda_package.zip

      - name: Verify Deployment
        run: |
          echo "Fetching latest Lamda configuration..."
          aws lambda get-function-configuration \
            --function-name arn:aws:lambda:us-east-1:760812854335:function:lamda_func \
            --query '{LastModified:LastModified, Runtime:Runtime, Handler:Handler, FunctionName:FunctionName}' \
            --output table
            
      - name: Test Invoke Lamda
        run: |
          echo "Invoking Lambda with test payload..."
          PAYLOAD=$(echo '{"test":"hello"}' | base64)
          aws lambda invoke \
            --function-name arn:aws:lambda:us-east-1:760812854335:function:lamda_func\
            --payload $PAYLOAD \
            response.json
          echo "Lamda response:"
          cat response.json
      - name: Invoke Lambda with S3 event payload
        run: |
          EVENT=$(jq -c -n \
            --arg bucket "my-unique-buck-name" \
            --arg key "$ZIP_NAME" \
            '{
              "Records": [
                {
                  "s3": {
                    "bucket": { "name": $bucket },
                    "object": { "key": $key }
                  }
                }
              ]
            }')

              echo "Sending event: $EVENT"
              aws lambda invoke \
                --function-name lamda_func \
                --cli-binary-format raw-in-base64-out \
                --payload "$EVENT" \
                response.json
              echo "Lambda response:"
              cat response.json
           
      




      #Cleanup: keep only last 5 versioned packages
      - name: Cleanup old Lambda packages in S3
        run: |
          FILES=$(aws s3 ls s3://my-unique-buck-name/ | grep lambda_package_v | sort | head -n -5 | awk '{print $4}')
          for file in $FILES; do
            echo "Deleting $file"
            aws s3 rm s3://my-unique-buck-name/$file
          done